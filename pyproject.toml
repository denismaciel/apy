[tool.poetry]
name = "apy"
version = "0.10.0"
description = "CLI script for interacting with local Anki collection"
authors = ["Karl Yngve Lerv√•g <karl.yngve@lervag.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
beautifulsoup4 = "^4.12.2"
click = "^8.1.3"
markdown = "^3.4.3"
readchar = "^4.0.5"
markdownify = "^0.11.6"
anki = "^2.1.63"
html5lib = "^1.1"

[tool.poetry.scripts]
apy = "apy.cli:main"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pylint = "^2.17.4"
pyqtwebengine = "^5.15.6"
bump2version = "^1.0.1"
black = "^23.3.0"
mypy = "^1.3.0"
types-beautifulsoup4 = "^4.12.0.5"
types-markdown = "^3.4.2.9"

[tool.pytest]
filterwarnings = ["ignore::DeprecationWarning:html5lib.*:"]

[tool.pylint.master]
init-hook = 'import sys; sys.path.append("/usr/share/anki")'

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint."messages control"]
max-statements = 75
disable = [
    "invalid-name",
    "too-many-branches",
    "too-many-instance-attributes",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = ".venv"
strict = true

# We're currently adding incremental type checking to the codebase, one file at
# a time. This means that we need to ignore errors in files that have not yet
# been type checked. Once a file has been type checked, it should be removed
# from the list below.
[[tool.mypy.overrides]]
module = [
    "apy.anki",
    "apy.cli",
    "apy.convert",
    "apy.__init__",
    "apy.note",
    "apy.utilities",
]
ignore_errors = true
